[{"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\reportWebVitals.js":"2","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\App.js":"3","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\header\\index.js":"4","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\TakeTest.js":"5","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\footer\\Footer.js":"6","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\api\\questionApi.js":"7","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\api\\axiosClient.js":"8","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\question.js":"9","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\store.js":"10","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\reducer\\index.js":"11","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\actions\\questionAction.js":"12","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\reducer\\quetionReducer.js":"13","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\actionType.js":"14","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\formTestFillOut\\FormFillOut.js":"15","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\changesentence\\ChangeSentence.js":"16","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\listen\\QuestionListen.js":"17","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\synonyms\\QuestionSynonyms.js":"18","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\readAndAnswer\\ReadAndAnswer.js":"19","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\SelectASuitableWork\\SelectASuitableWork.js":"20","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\router.js":"21","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\createExam\\CreateExam.js":"22","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\ExamTest.js":"23","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\admin.js":"24","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\login\\index.js":"25","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\home.js":"26","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\Menu\\index.js":"27"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":901,"mtime":1614850639028,"results":"31","hashOfConfig":"29"},{"size":650,"mtime":1614795466561,"results":"32","hashOfConfig":"29"},{"size":13796,"mtime":1614762133332,"results":"33","hashOfConfig":"29"},{"size":155,"mtime":1611637276210,"results":"34","hashOfConfig":"29"},{"size":404,"mtime":1611826134663,"results":"35","hashOfConfig":"29"},{"size":402,"mtime":1611646051518,"results":"36","hashOfConfig":"29"},{"size":2064,"mtime":1614761344357,"results":"37","hashOfConfig":"29"},{"size":387,"mtime":1611822038892,"results":"38","hashOfConfig":"29"},{"size":176,"mtime":1611821468459,"results":"39","hashOfConfig":"29"},{"size":422,"mtime":1614743410470,"results":"40","hashOfConfig":"29"},{"size":738,"mtime":1614743358867,"results":"41","hashOfConfig":"29"},{"size":160,"mtime":1614743293299,"results":"42","hashOfConfig":"29"},{"size":1930,"mtime":1614761337408,"results":"43","hashOfConfig":"29"},{"size":1534,"mtime":1614761334205,"results":"44","hashOfConfig":"29"},{"size":3239,"mtime":1614761341223,"results":"45","hashOfConfig":"29"},{"size":2543,"mtime":1614761354546,"results":"46","hashOfConfig":"29"},{"size":4900,"mtime":1614761348089,"results":"47","hashOfConfig":"29"},{"size":2363,"mtime":1614761360121,"results":"48","hashOfConfig":"29"},{"size":402,"mtime":1614830041924,"results":"49","hashOfConfig":"29"},{"size":4111,"mtime":1614744942616,"results":"50","hashOfConfig":"29"},{"size":13785,"mtime":1614851434613,"results":"51","hashOfConfig":"29"},{"size":132,"mtime":1614767785105,"results":"52","hashOfConfig":"29"},{"size":1481,"mtime":1614849585702,"results":"53","hashOfConfig":"29"},{"size":683,"mtime":1614829997957,"results":"54","hashOfConfig":"29"},{"size":1319,"mtime":1614850417618,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"19l4k73",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\index.js",[],["119","120"],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\App.js",["121","122","123","124"],"import React from 'react'\nimport './App.scss'\nimport 'antd/dist/antd.css';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\nimport Home from './components/home'\nimport Login from './components/login/index'\nimport Admin from './components/admin'\nimport Header from './components/header/index'\nimport Footer from './components/footer/Footer';\n\nconst App = () => {\n  return (\n    <Provider store= {store}>\n      <Router>\n        <Header/>\n        <div className=\"content\">\n          {/* <Switch>\n            <Route  exact path=\"/login\"><Login/></Route>\n            <Router exact  path=\"/\"><Home/></Router>\n            <Router  exact path=\"/admin\"><Admin/></Router>\n          </Switch> */}\n          <Home/>\n        </div>\n        <Footer/>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\header\\index.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\TakeTest.js",["125"],"  import React, { useEffect, useState } from 'react'\n  import './style.scss'\n  import questionsApi from '../../../api/questionApi'\n  import Question from './question'\n  import { Tabs } from 'antd';\n  import { useDispatch, useSelector } from 'react-redux';\n  import {\n    getQuestion as getQuestionAction,\n    getQuestionFillOut as getQuestionFillOutAction\n  } from '../../../redux/actions/questionAction'\n  import FormFillOut from './formTestFillOut/FormFillOut'\n  import ChangeSentence from './changesentence/ChangeSentence'\n  import QuestionListen from './listen/QuestionListen'\n  import QuestionSynonyms from './synonyms/QuestionSynonyms'\n  import QuestionRead from './readAndAnswer/ReadAndAnswer'\n  import SelectASuitableWork from './SelectASuitableWork/SelectASuitableWork'\n\n  const { TabPane } = Tabs;\n\n  const TakeTest = () => {\n    const dispatch = useDispatch()\n\n    const listQuestions = useSelector(store => store.questionReducer.listQuestionsTrueFalse)\n    const arrQuestionFillOut = useSelector(store => store.questionReducer.listQuestionsFillOut)\n    const [listChangeSentence, setListChangeSentence] = useState([])\n    const [listQuestionListen, setListQuestionListen] = useState([])\n    const [listQuestionSynonyms, setListQuestionSynonyms] = useState([])\n    const [listQuestionRead, setListQuestionRead] = useState([])\n    const [listQuestionSelect, setListQuestionSelect] = useState([])\n\n    const [arrQuestion, setArrQuestion] = useState([])\n    const [listAnswerUser, setListAnswerUser] = useState({})\n    console.log(listAnswerUser);\n\n    const [start, setStart] = useState(false)\n    const [answerTrue, setAnswerTrue] = useState(0)\n    const [count, setCount] = useState(0)\n\n\n    const randomQuestion = (arr = [], number) => {\n      let newArr = []\n      while(newArr.length < number) {\n        const question = Math.floor(Math.random() * arr.length )\n        newArr.push(arr[question])\n        const arrFilter = newArr.filter((item, index) => (newArr.indexOf(item) === index))\n        newArr = arrFilter\n      }\n      return newArr\n    }\n\n    const onStart = () => {\n      const listQuestion = randomQuestion(listQuestions,6)\n      const listQuestionFillOut = randomQuestion(arrQuestionFillOut,6)\n      const listQuestionChangeSentence = randomQuestion(listChangeSentence,5)\n      const listSynonyms = randomQuestion(listQuestionSynonyms,2)\n      const listRead = randomQuestion(listQuestionRead,1)\n      const listSelect = randomQuestion(listQuestionSelect,3)\n      const arr = listQuestion.concat(listQuestionFillOut, listQuestionChangeSentence, listSynonyms, listQuestionListen, listRead,  listSelect)\n      setArrQuestion(arr)\n      setStart(true)\n      setCount(0)\n      setAnswerTrue(0)\n      setListAnswerUser({})\n    }\n\n    const fetchQuestionApi = async () => {\n      const response = await questionsApi.fetchQuestionApi('questions')\n      dispatch(getQuestionAction(response))\n\n      const questionFillOut = await questionsApi.fetchQuestionApi('formFillOut')\n      dispatch(getQuestionFillOutAction(questionFillOut))\n\n      const questionChangeSentence = await questionsApi.fetchQuestionApi('changesentence')\n      setListChangeSentence(questionChangeSentence)\n\n      const questionListen = await questionsApi.fetchQuestionApi('listening')\n      setListQuestionListen(questionListen)\n\n      const questionSynonyms = await questionsApi.fetchQuestionApi('synonyms')\n      setListQuestionSynonyms(questionSynonyms)\n\n      const questionRead = await questionsApi.fetchQuestionApi('readandanswer')\n      setListQuestionRead(questionRead)\n\n      const questionSelect = await questionsApi.fetchQuestionApi('selectasuitableword')\n      setListQuestionSelect(questionSelect)\n    }\n\n    useEffect(() => {\n      fetchQuestionApi()\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const answerUser = (answer, id) => {\n      setListAnswerUser({\n        ...listAnswerUser,\n        [id]: answer\n      })\n    }\n    const clickCancel = () => {\n      setStart(false)\n      setListAnswerUser({})\n      setArrQuestion([])\n      setAnswerTrue(0)\n    }\n    const onsubmitTest = () => {\n      let a = 0\n      let numberQuestion = arrQuestion.length\n\n      arrQuestion.forEach(elem => {\n        if ((elem.typeID === 2 || elem.typeID === 1 || elem.typeID === 3 || elem.typeID === 4) && listAnswerUser[elem.id] ) {\n          const trimCorrectAnswer = elem.correctAnswer.replace(/\\s+/g, \"\")\n          const trimAnswer = listAnswerUser[elem.id].replace(/\\s+/g, \"\")\n          if(trimAnswer === trimCorrectAnswer) {\n            a++\n          }\n        }\n\n        if (elem.typeID === 5) {\n          numberQuestion += 3\n        }\n\n        if (elem.typeID === 6) {\n          numberQuestion += 8\n        }\n\n        if (elem.typeID === 5 && listAnswerUser[elem.id]) {\n          if(listAnswerUser[elem.id].a) {\n            const answerA = elem.correctAnswer.a.replace(/\\s+/g, \"\")\n            const answerAUser = listAnswerUser[elem.id].a.replace(/\\s+/g, \"\")\n            if(answerA === answerAUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].b) {\n            const answerB = elem.correctAnswer.b.replace(/\\s+/g, \"\")\n            const answerBUser = listAnswerUser[elem.id].b.replace(/\\s+/g, \"\")\n            if(answerB === answerBUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].c) {\n            const answerC = elem.correctAnswer.c.replace(/\\s+/g, \"\")\n            const answerCUser = listAnswerUser[elem.id].c.replace(/\\s+/g, \"\")\n            if(answerC === answerCUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].d) {\n            const answerD = elem.correctAnswer.d.replace(/\\s+/g, \"\")\n            const answerDUser = listAnswerUser[elem.id].d.replace(/\\s+/g, \"\")\n            if(answerD === answerDUser) {\n              a++\n            }\n          }\n        }\n\n        if (elem.typeID === 6 && listAnswerUser[elem.id]) {\n          if (listAnswerUser[elem.id].a) {\n            const answerA = elem.correctAnswer.a.replace(/\\s+/g, \"\")\n            const answerAUser = listAnswerUser[elem.id].a.replace(/\\s+/g, \"\")\n            if(answerA === answerAUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].b) {\n            const answerB = elem.correctAnswer.b.replace(/\\s+/g, \"\")\n            const answerBUser = listAnswerUser[elem.id].b.replace(/\\s+/g, \"\")\n            if(answerB === answerBUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].c) {\n            const answerC = elem.correctAnswer.c.replace(/\\s+/g, \"\")\n            const answerCUser = listAnswerUser[elem.id].c.replace(/\\s+/g, \"\")\n            if(answerC === answerCUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].d) {\n            const answerD = elem.correctAnswer.d.replace(/\\s+/g, \"\")\n            const answerDUser = listAnswerUser[elem.id].d.replace(/\\s+/g, \"\")\n            if(answerD === answerDUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].e) {\n            const answerE = elem.correctAnswer.e.replace(/\\s+/g, \"\")\n            const answerEUser = listAnswerUser[elem.id].e.replace(/\\s+/g, \"\")\n            if(answerE === answerEUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].f) {\n            const answerF = elem.correctAnswer.f.replace(/\\s+/g, \"\")\n            const answerFUser = listAnswerUser[elem.id].f.replace(/\\s+/g, \"\")\n            if(answerF === answerFUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].g) {\n            const answerG = elem.correctAnswer.g.replace(/\\s+/g, \"\")\n            const answerGUser = listAnswerUser[elem.id].g.replace(/\\s+/g, \"\")\n            if(answerG === answerGUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].h) {\n            const answerH = elem.correctAnswer.h.replace(/\\s+/g, \"\")\n            const answerHUser = listAnswerUser[elem.id].h.replace(/\\s+/g, \"\")\n            if(answerH === answerHUser) {\n              a++\n            }\n          }\n        }\n        if (elem.typeID === 7 && listAnswerUser[elem.id]) {\n          const trimCorrectAnswer = elem.correctAnswer.replace(/\\s+/g, \"\")\n          const trimAnswer = listAnswerUser[elem.id].replace(/\\s+/g, \"\")\n          if(trimAnswer === trimCorrectAnswer) {\n            a++\n          }\n        }\n\n\n      })\n\n      const score = Math.round(((10 / numberQuestion ) * a) * 100) / 100\n      setAnswerTrue(a)\n      setCount(score)\n      setStart(false)\n      setListAnswerUser({})\n      setArrQuestion([])\n    }\n\n    const callback = (key) => {\n\n    }\n\n    return (\n      <div className=\"takeTest\">\n        <div className=\"row\">\n          <div className=\"col-4 takeTest__left\">\n            <div className=\"takeTest__left__start\" style={{display: start ? 'block' : 'none'}}>\n              <p className=\"takeTest__left__start--title\">thời gian làm bài</p>\n              <div className=\"takeTest__left__start--time\"><span>15 phút</span></div>\n            </div>\n\n            <div className=\"takeTest__left__information\">\n              <p className=\"takeTest__left__information--title\">tên đề thi</p>\n              <div ><label>Điểm: </label> <span>{count}</span></div>\n              <div ><label>Số câu: </label> <span>{arrQuestion.length}</span></div>\n              <div ><label>Số câu làm được: </label> <span>{answerTrue}</span></div>\n              <div ><label>Thời gian: </label> <span>15</span> phút</div>\n            </div>\n\n            <div className=\"takeTest__left__action\">\n              <button className=\"takeTest__left__action--submit\" onClick={onsubmitTest} style={{display: start ? 'block' : 'none'}}>Nộp bài</button>\n              <button className=\"takeTest__left__action--start\" onClick={onStart} style={{display: start ? 'none' : 'block'}}>Bắt đầu làm</button>\n              <button className=\"takeTest__left__action--cancel\" onClick={clickCancel} style={{display: start ? 'block' : 'none'}}>Huỷ</button>\n            </div>\n\n            <div className=\"takeTest__left__shear\">\n              <p>Chia sẻ lên</p>\n              <div>\n                <span className=\"takeTest__left__shear--facebook\"><i className=\"fab fa-facebook-f\"></i></span>\n                <span className=\"takeTest__left__shear--twitter\"><i className=\"fab fa-twitter\"></i></span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-8 takeTest__right\">\n            <div className=\"takeTest__right__tutorial\" style={{display: start ? 'none' : 'block'}}>\n            <div className=\"takeTest__right__tutorial--title\">Hướng dẫn làm bài</div>\n            <div className=\"takeTest__right__tutorial--content\">\n              <p>Hướng dẫn làm bài thi trắc nghiệm</p>\n              <p>1. Đợi đến khi đến thời gian làm bài</p>\n              <p>2. CLick vào nút \"bắt đầu làm bài\" để tiến hành làm bài thi</p>\n              <p>3. Ở mỗi câu hỏi , chọn đáp án đúng</p>\n              <p>4. Hết thời gian làm bài, hệ thống sẽ tự thu bài. Bạn có thể nộp bài trước khi thời gian kết thúc bằng cách nhấn nút<span className=\"takeTest__right__tutorial--span\">Nộp bài</span></p>\n            </div>\n            </div>\n\n            <div className=\"takeTest__right__question\" style={{display: start ? 'block' : 'none'}}>\n              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Chọn đáp án đúng\" key=\"1\">\n                  <Question\n                    arrQuestion={arrQuestion}\n                    answerUser = {answerUser}\n                    listAnswerUser = {listAnswerUser}\n                  />\n                </TabPane>\n                <TabPane tab=\"Điền vào chỗ trống\" key=\"2\">\n                  <FormFillOut\n                    arrQuestion={arrQuestion}\n                    answerUser = {answerUser}\n                    listAnswerUser = {listAnswerUser}\n                  />\n                </TabPane>\n                <TabPane tab=\"Viết lại câu\" key=\"3\">\n                  <ChangeSentence\n                      arrQuestion={arrQuestion}\n                      answerUser = {answerUser}\n                      listAnswerUser = {listAnswerUser}\n                    />\n                </TabPane>\n                <TabPane tab=\"Chọn từ để câu không khác nghĩa\" key=\"4\">\n                  <QuestionSynonyms\n                      arrQuestion={arrQuestion}\n                      answerUser = {answerUser}\n                      listAnswerUser = {listAnswerUser}\n                    />\n                </TabPane>\n                <TabPane tab=\"Nghe\" key=\"5\">\n                  <QuestionListen\n                    arrQuestion={arrQuestion}\n                    answerUser = {answerUser}\n                    listAnswerUser = {listAnswerUser}\n                  />\n                </TabPane>\n                <TabPane tab=\"đọc và trả lời câu hỏi\" key=\"6\">\n                  <QuestionRead\n                    arrQuestion={arrQuestion}\n                    answerUser = {answerUser}\n                    listAnswerUser = {listAnswerUser}\n                  />\n                </TabPane>\n                <TabPane tab=\"chon từ phù hợp\" key=\"7\">\n                  <SelectASuitableWork\n                    arrQuestion={arrQuestion}\n                    answerUser = {answerUser}\n                    listAnswerUser = {listAnswerUser}\n                  />\n                </TabPane>\n              </Tabs>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  export default TakeTest\n","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\footer\\Footer.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\api\\questionApi.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\api\\axiosClient.js",[],["126","127"],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\question.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\store.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\reducer\\index.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\actions\\questionAction.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\reducer\\quetionReducer.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\redux\\actionType.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\formTestFillOut\\FormFillOut.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\changesentence\\ChangeSentence.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\listen\\QuestionListen.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\synonyms\\QuestionSynonyms.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\readAndAnswer\\ReadAndAnswer.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\SelectASuitableWork\\SelectASuitableWork.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\router.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\createExam\\CreateExam.js",["128","129","130","131"],"import React, { useState } from 'react'\nimport { Form, Input, InputNumber, Button, Row, Col } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {setQuestionExamTest as setQuestionExamTestAction} from '../../../redux/actions/questionAction'\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  const validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not a valid email!',\n      number: '${label} is not a valid number!',\n    },\n    number: {\n      range: '${label} must be between ${min} and ${max}',\n    },\n  };\n\nconst CreateExam = () => {\n  const dispatch = useDispatch()\n  const [examTest, setExamTest] = useState('')\n\n  const onFinish = (values) => {\n    setExamTest(values)\n  };\n\n  const setListExamTest = () => {\n    dispatch(setQuestionExamTestAction(examTest))\n  }\n  return (\n    <>\n      <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n      <Row gutter={24}>\n        <Col span={12}>\n          <Form.Item\n            name={['name']}\n            label=\"Tên đề bài\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n            <Form.Item\n              name={['time']}\n              label=\"thời gian làm bài\"\n              rules={[{ type: 'number', min: 0, max: 15, required: true }]}\n            >\n              <InputNumber />\n            </Form.Item>\n          </Col>\n        <Col span={12}>\n          <Form.Item\n            name={['questions']}\n            label=\"Dạng đúng sai\"\n            rules={[{ type: 'number', min: 0, max: 15 ,required: true}]}\n          >\n            <InputNumber />\n          </Form.Item>\n        </Col>\n\n        <Col span={12}>\n          <Form.Item\n            name={['formFillOut']}\n            label=\"Dạng điền vào chỗ trống\"\n            rules={[{ type: 'number', min: 0, max: 15, required: true }]}\n          >\n            <InputNumber />\n          </Form.Item>\n        </Col>\n\n          <Col span={12}>\n            <Form.Item\n              name={['changesentence']}\n              label=\"Dạng viết lại câu\"\n              rules={[{ type: 'number', min: 0, max: 15, required: true }]}\n            >\n              <InputNumber />\n            </Form.Item>\n          </Col>\n\n          <Col span={12}>\n            <Form.Item\n              name={['listening']}\n              label=\"Dạng câu hỏi nghe\"\n              rules={[{ type: 'number', min: 0, max: 15, required: true }]}\n            >\n              <InputNumber />\n            </Form.Item>\n          </Col>\n\n          <Col span={12}>\n            <Form.Item\n              name={['synonyms']}\n              label=\"câu hỏi tìm từ\"\n              rules={[{ type: 'number', min: 0, max: 15, required: true }]}\n            >\n              <InputNumber />\n            </Form.Item>\n          </Col>\n\n          <Col span={12}>\n            <Form.Item\n              name={['readandanswer']}\n              label=\"câu hỏi đọc hiểu\"\n              rules={[{ type: 'number', min: 0, max: 15, required: true }]}\n            >\n              <InputNumber />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item\n              name={['selectasuitableword']}\n              label=\"câu hỏi chọn từ\"\n              rules={[{ type: 'number', min: 0, max: 15, required: true }]}\n            >\n              <InputNumber />\n            </Form.Item>\n          </Col>\n\n          <Col span={24} >\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 10 }}>\n              <Button type=\"primary\" htmlType=\"submit\" >\n                Tạo đề\n              </Button>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n      <div style={{display: examTest ? 'block' : 'none'}}>\n        <Link to=\"/examTest\">\n          <Button type=\"primary\" onClick={setListExamTest}> test đề</Button>\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default CreateExam;\n","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\main\\takeTest\\ExamTest.js",["132"],"// eslint-disable-next-line\nimport React, { useEffect, useState } from 'react'\nimport './style.scss'\nimport questionsApi from '../../../api/questionApi'\nimport Question from './question'\nimport { Tabs } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getQuestion as getQuestionAction,\n  getQuestionFillOut as getQuestionFillOutAction\n} from '../../../redux/actions/questionAction'\nimport FormFillOut from './formTestFillOut/FormFillOut'\nimport ChangeSentence from './changesentence/ChangeSentence'\nimport QuestionListen from './listen/QuestionListen'\nimport QuestionSynonyms from './synonyms/QuestionSynonyms'\nimport QuestionRead from './readAndAnswer/ReadAndAnswer'\nimport SelectASuitableWork from './SelectASuitableWork/SelectASuitableWork'\n\n  const { TabPane } = Tabs;\n\n  const TakeTest = () => {\n    const dispatch = useDispatch()\n\n    const examTest = useSelector(store => store.questionReducer.listQuestionExamTest)\n    console.log(examTest);\n\n    const listQuestions = useSelector(store => store.questionReducer.listQuestionsTrueFalse)\n    const arrQuestionFillOut = useSelector(store => store.questionReducer.listQuestionsFillOut)\n    const [listChangeSentence, setListChangeSentence] = useState([])\n    const [listQuestionListen, setListQuestionListen] = useState([])\n    const [listQuestionSynonyms, setListQuestionSynonyms] = useState([])\n    const [listQuestionRead, setListQuestionRead] = useState([])\n    const [listQuestionSelect, setListQuestionSelect] = useState([])\n\n    const [arrQuestion, setArrQuestion] = useState([])\n    const [listAnswerUser, setListAnswerUser] = useState({})\n\n    const [start, setStart] = useState(false)\n    const [answerTrue, setAnswerTrue] = useState(0)\n    const [count, setCount] = useState(0)\n\n    const initialPanes = [\n      {\n        title: 'Chọn đáp án đúng',\n        content: Question,\n        key: 'questions',\n        closable: false,\n      },\n      {\n        title: 'Điền vào chỗ trống',\n        content: FormFillOut,\n        key: 'formFillOut',\n        closable: false,\n      },\n      {\n        title: 'Viết lại câu',\n        content: ChangeSentence,\n        key: 'changesentence',\n        closable: false,\n      },\n      {\n        title: 'đọc và trả lời câu hỏi',\n        content: QuestionRead,\n        key: 'readandanswer',\n        closable: false,\n      },\n      {\n        title: 'nghe',\n        content: QuestionListen,\n        key: 'listening',\n        closable: false,\n      },\n      {\n        title: 'Chọn từ để câu không khác nghĩa',\n        content: QuestionSynonyms,\n        key: 'synonyms',\n        closable: false,\n      },\n      {\n        title: 'chon từ phù hợp',\n        content: SelectASuitableWork,\n        key: 'selectasuitableword',\n        closable: false,\n      },\n    ];\n\n    const randomQuestion = (arr = [], number) => {\n      let newArr = []\n      while(newArr.length < number) {\n        const question = Math.floor(Math.random() * arr.length )\n        newArr.push(arr[question])\n        const arrFilter = newArr.filter((item, index) => (newArr.indexOf(item) === index))\n        newArr = arrFilter\n      }\n      return newArr\n    }\n\n    const onStart = () => {\n      const listQuestion = randomQuestion(listQuestions,examTest.questions)\n      const listQuestionFillOut = randomQuestion(arrQuestionFillOut,examTest.formFillOut)\n      const listQuestionChangeSentence = randomQuestion(listChangeSentence,examTest.changesentence)\n      const listSynonyms = randomQuestion(listQuestionSynonyms,examTest.synonyms)\n      const listRead = randomQuestion(listQuestionRead,examTest.readandanswer)\n      const listListen = randomQuestion(listQuestionListen,examTest.listening)\n      const listSelect = randomQuestion(listQuestionSelect,examTest.selectasuitableword)\n      const arr = listQuestion.concat(listQuestionFillOut, listQuestionChangeSentence, listSynonyms, listListen, listRead,  listSelect)\n      setArrQuestion(arr)\n      setStart(true)\n      setCount(0)\n      setAnswerTrue(0)\n      setListAnswerUser({})\n    }\n\n    const fetchQuestionApi = async () => {\n      const response = await questionsApi.fetchQuestionApi('questions')\n      dispatch(getQuestionAction(response))\n\n      const questionFillOut = await questionsApi.fetchQuestionApi('formFillOut')\n      dispatch(getQuestionFillOutAction(questionFillOut))\n\n      const questionChangeSentence = await questionsApi.fetchQuestionApi('changesentence')\n      setListChangeSentence(questionChangeSentence)\n\n      const questionListen = await questionsApi.fetchQuestionApi('listening')\n      setListQuestionListen(questionListen)\n\n      const questionSynonyms = await questionsApi.fetchQuestionApi('synonyms')\n      setListQuestionSynonyms(questionSynonyms)\n\n      const questionRead = await questionsApi.fetchQuestionApi('readandanswer')\n      setListQuestionRead(questionRead)\n\n      const questionSelect = await questionsApi.fetchQuestionApi('selectasuitableword')\n      setListQuestionSelect(questionSelect)\n    }\n\n    useEffect(() => {\n      fetchQuestionApi()\n       // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const answerUser = (answer, id) => {\n      setListAnswerUser({\n        ...listAnswerUser,\n        [id]: answer\n      })\n    }\n    const clickCancel = () => {\n      setStart(false)\n      setListAnswerUser({})\n      setArrQuestion([])\n      setAnswerTrue(0)\n    }\n    const onsubmitTest = () => {\n      let a = 0\n      let numberQuestion = arrQuestion.length\n\n      arrQuestion.forEach(elem => {\n        if ((elem.typeID === 2 || elem.typeID === 1 || elem.typeID === 3 || elem.typeID === 4) && listAnswerUser[elem.id] ) {\n          const trimCorrectAnswer = elem.correctAnswer.replace(/\\s+/g, \"\")\n          const trimAnswer = listAnswerUser[elem.id].replace(/\\s+/g, \"\")\n          if(trimAnswer === trimCorrectAnswer) {\n            a++\n          }\n        }\n\n        if (elem.typeID === 5) {\n          numberQuestion += 3\n        }\n\n        if (elem.typeID === 6) {\n          numberQuestion += 8\n        }\n\n        if (elem.typeID === 5 && listAnswerUser[elem.id]) {\n          if(listAnswerUser[elem.id].a) {\n            const answerA = elem.correctAnswer.a.replace(/\\s+/g, \"\")\n            const answerAUser = listAnswerUser[elem.id].a.replace(/\\s+/g, \"\")\n            if(answerA === answerAUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].b) {\n            const answerB = elem.correctAnswer.b.replace(/\\s+/g, \"\")\n            const answerBUser = listAnswerUser[elem.id].b.replace(/\\s+/g, \"\")\n            if(answerB === answerBUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].c) {\n            const answerC = elem.correctAnswer.c.replace(/\\s+/g, \"\")\n            const answerCUser = listAnswerUser[elem.id].c.replace(/\\s+/g, \"\")\n            if(answerC === answerCUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].d) {\n            const answerD = elem.correctAnswer.d.replace(/\\s+/g, \"\")\n            const answerDUser = listAnswerUser[elem.id].d.replace(/\\s+/g, \"\")\n            if(answerD === answerDUser) {\n              a++\n            }\n          }\n        }\n\n        if (elem.typeID === 6 && listAnswerUser[elem.id]) {\n          if (listAnswerUser[elem.id].a) {\n            const answerA = elem.correctAnswer.a.replace(/\\s+/g, \"\")\n            const answerAUser = listAnswerUser[elem.id].a.replace(/\\s+/g, \"\")\n            if(answerA === answerAUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].b) {\n            const answerB = elem.correctAnswer.b.replace(/\\s+/g, \"\")\n            const answerBUser = listAnswerUser[elem.id].b.replace(/\\s+/g, \"\")\n            if(answerB === answerBUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].c) {\n            const answerC = elem.correctAnswer.c.replace(/\\s+/g, \"\")\n            const answerCUser = listAnswerUser[elem.id].c.replace(/\\s+/g, \"\")\n            if(answerC === answerCUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].d) {\n            const answerD = elem.correctAnswer.d.replace(/\\s+/g, \"\")\n            const answerDUser = listAnswerUser[elem.id].d.replace(/\\s+/g, \"\")\n            if(answerD === answerDUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].e) {\n            const answerE = elem.correctAnswer.e.replace(/\\s+/g, \"\")\n            const answerEUser = listAnswerUser[elem.id].e.replace(/\\s+/g, \"\")\n            if(answerE === answerEUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].f) {\n            const answerF = elem.correctAnswer.f.replace(/\\s+/g, \"\")\n            const answerFUser = listAnswerUser[elem.id].f.replace(/\\s+/g, \"\")\n            if(answerF === answerFUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].g) {\n            const answerG = elem.correctAnswer.g.replace(/\\s+/g, \"\")\n            const answerGUser = listAnswerUser[elem.id].g.replace(/\\s+/g, \"\")\n            if(answerG === answerGUser) {\n              a++\n            }\n          }\n\n          if (listAnswerUser[elem.id].h) {\n            const answerH = elem.correctAnswer.h.replace(/\\s+/g, \"\")\n            const answerHUser = listAnswerUser[elem.id].h.replace(/\\s+/g, \"\")\n            if(answerH === answerHUser) {\n              a++\n            }\n          }\n        }\n        if (elem.typeID === 7 && listAnswerUser[elem.id]) {\n          const trimCorrectAnswer = elem.correctAnswer.replace(/\\s+/g, \"\")\n          const trimAnswer = listAnswerUser[elem.id].replace(/\\s+/g, \"\")\n          if(trimAnswer === trimCorrectAnswer) {\n            a++\n          }\n        }\n\n\n      })\n\n      const score = Math.round(((10 / numberQuestion ) * a) * 100) / 100\n      setAnswerTrue(a)\n      setCount(score)\n      setStart(false)\n      setListAnswerUser({})\n      setArrQuestion([])\n    }\n    const callback = (key) => {\n\n    }\n\n    return (\n      <div className=\"takeTest\">\n        <div className=\"row\">\n          <div className=\"col-4 takeTest__left\">\n            <div className=\"takeTest__left__start\" style={{display: start ? 'block' : 'none'}}>\n              <p className=\"takeTest__left__start--title\">thời gian làm bài</p>\n              <div className=\"takeTest__left__start--time\"><span>15 phút</span></div>\n            </div>\n\n            <div className=\"takeTest__left__information\">\n              <p className=\"takeTest__left__information--title\">{examTest.name}</p>\n              <div ><label>Điểm: </label> <span>{count}</span></div>\n              <div ><label>Số câu: </label> <span>{arrQuestion.length}</span></div>\n              <div ><label>Số câu làm được: </label> <span>{answerTrue}</span></div>\n              <div ><label>Thời gian: </label> <span>{examTest.time}</span> phút</div>\n            </div>\n\n            <div className=\"takeTest__left__action\">\n              <button className=\"takeTest__left__action--submit\" onClick={onsubmitTest} style={{display: start ? 'block' : 'none'}}>Nộp bài</button>\n              <button className=\"takeTest__left__action--start\" onClick={onStart} style={{display: start ? 'none' : 'block'}}>Bắt đầu làm</button>\n              <button className=\"takeTest__left__action--cancel\" onClick={clickCancel} style={{display: start ? 'block' : 'none'}}>Huỷ</button>\n            </div>\n\n            <div className=\"takeTest__left__shear\">\n              <p>Chia sẻ lên</p>\n              <div>\n                <span className=\"takeTest__left__shear--facebook\"><i className=\"fab fa-facebook-f\"></i></span>\n                <span className=\"takeTest__left__shear--twitter\"><i className=\"fab fa-twitter\"></i></span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-8 takeTest__right\">\n            <div className=\"takeTest__right__tutorial\" style={{display: start ? 'none' : 'block'}}>\n            <div className=\"takeTest__right__tutorial--title\">Hướng dẫn làm bài</div>\n            <div className=\"takeTest__right__tutorial--content\">\n              <p>Hướng dẫn làm bài thi trắc nghiệm</p>\n              <p>1. Đợi đến khi đến thời gian làm bài</p>\n              <p>2. CLick vào nút \"bắt đầu làm bài\" để tiến hành làm bài thi</p>\n              <p>3. Ở mỗi câu hỏi , chọn đáp án đúng</p>\n              <p>4. Hết thời gian làm bài, hệ thống sẽ tự thu bài. Bạn có thể nộp bài trước khi thời gian kết thúc bằng cách nhấn nút<span className=\"takeTest__right__tutorial--span\">Nộp bài</span></p>\n            </div>\n            </div>\n\n            <div className=\"takeTest__right__question\" style={{display: start ? 'block' : 'none'}}>\n              <Tabs defaultActiveKey=\"1\" onChange={callback} >\n              { examTest && (\n                initialPanes.map((item) => {\n                  const a = item.key\n                  const Component = item.content\n                  if (examTest[a] !== 0) {\n                    return (\n                      <TabPane tab={item.title} key={item.key}>\n                        <Component\n                          arrQuestion={arrQuestion}\n                          answerUser = {answerUser}\n                          listAnswerUser = {listAnswerUser}\n                        />\n                      </TabPane>\n                    )\n                  }  else {\n                    return null\n                  }\n                })\n              )\n              }\n              </Tabs>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  export default TakeTest\n","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\admin.js",[],"C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\login\\index.js",["133"],"import React, { useState } from 'react'\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\nconst Login = () => {\n  const history = useHistory();\n  const onFinish = (values) => {\n    if (values.username === \"admin\" && values.password === \"123\") {\n      console.log(history);\n      return history.push('/admin')\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  return (\n    <>\n      <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[{ required: true, message: 'Please input your username!' }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[{ required: true, message: 'Please input your password!' }]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n        <Checkbox>Remember me</Checkbox>\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n    </>\n  )\n}\n\nexport default Login\n","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\home.js",["134"],"import React from 'react'\nimport Footer from './footer/Footer'\nimport 'antd/dist/antd.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\nimport router from '../router'\nimport Menu from './Menu/index';\n\nconst Home = () => {\n  return (\n    <>\n      <Router>\n        <Menu/>\n        <Switch>\n          {\n            router.map((item, index) => {\n              const {Component} = item\n              return (\n                <Route path={item.path} exact={item.exact} key={index}>\n                  <Component />\n                </Route>\n              )\n            })\n          }\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default Home;\n","C:\\Users\\PC\\Desktop\\webTestEnglish\\web-test-english\\src\\components\\Menu\\index.js",["135","136","137"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './style.scss'\n\nconst Menu = () => {\n  return (\n    <div className=\"menu\">\n      <div className=\"menu__content\">\n          <div className=\"row\">\n            <div className=\"col-4 menu__content--logo\">logo</div>\n            <div className=\"col-8 menu__content--menu\">\n              <ul className=\"nav\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link active\" href=\"#\">giới thiệu</a>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/taketest\">thi thử</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#\">lịch sử thi</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#\">đề thi đã lưu</a>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/\">Tạo đề thi</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to = \"/\">giới thiệu</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Menu\n",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":8,"column":3,"nodeType":"144","messageId":"145","endLine":8,"endColumn":9},{"ruleId":"142","severity":1,"message":"146","line":9,"column":3,"nodeType":"144","messageId":"145","endLine":9,"endColumn":8},{"ruleId":"142","severity":1,"message":"147","line":12,"column":8,"nodeType":"144","messageId":"145","endLine":12,"endColumn":13},{"ruleId":"142","severity":1,"message":"148","line":13,"column":8,"nodeType":"144","messageId":"145","endLine":13,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":45,"column":41,"nodeType":"151","messageId":"152","endLine":45,"endColumn":90},{"ruleId":"138","replacedBy":"153"},{"ruleId":"140","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":13,"column":15,"nodeType":"157","messageId":"158","endLine":13,"endColumn":38},{"ruleId":"155","severity":1,"message":"156","line":15,"column":14,"nodeType":"157","messageId":"158","endLine":15,"endColumn":46},{"ruleId":"155","severity":1,"message":"156","line":16,"column":15,"nodeType":"157","messageId":"158","endLine":16,"endColumn":48},{"ruleId":"155","severity":1,"message":"156","line":19,"column":14,"nodeType":"157","messageId":"158","endLine":19,"endColumn":58},{"ruleId":"149","severity":1,"message":"150","line":92,"column":41,"nodeType":"151","messageId":"152","endLine":92,"endColumn":90},{"ruleId":"142","severity":1,"message":"159","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"160","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":14,"column":19,"nodeType":"163","endLine":14,"endColumn":59},{"ruleId":"161","severity":1,"message":"162","line":20,"column":19,"nodeType":"163","endLine":20,"endColumn":52},{"ruleId":"161","severity":1,"message":"162","line":23,"column":19,"nodeType":"163","endLine":23,"endColumn":52},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Login' is defined but never used.","'Admin' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'newArr'.","ArrowFunctionExpression","unsafeRefs",["164"],["165"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'useState' is defined but never used.","'Footer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]